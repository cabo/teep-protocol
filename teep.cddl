teep-message = $teep-message-type .within teep-message-framework

SUIT-envelope = bytes ; placeholder

teep-message-framework = [
  type: 0..23 / $teep-type-extension,
  token: uint,
  options: { * teep-option },
  * int; further integers, e.g. for data-item-requested
]

teep-option = (uint => any)

; this is cleaned up so:
; -- type is always 0..23, holler if that is not enough
; -- $teep-type-extension is a possibility to extend that later, is that desirable?
; -- data-items come after the option, so that has a fixed position
;    and the options info is available when decoding data items.  But then
;    I don't understand what the point of data-items is.
; -- we did not use generics here, even though that might reduce some of the clutter.

; messages defined below:
$teep-message-type /= query-request
$teep-message-type /= query-response
$teep-message-type /= trusted-app-install
$teep-message-type /= trusted-app-delete
$teep-message-type /= teep-error
$teep-message-type /= teep-success

; message type numbers
TEEP-TYPE-query-request = 1
TEEP-TYPE-query-response = 2
TEEP-TYPE-trusted-app-install = 3
TEEP-TYPE-trusted-app-delete = 4
TEEP-TYPE-teep-error = 5
TEEP-TYPE-teep-success = 6

version = uint .size 4
ext-info = uint

data-item-requested = $data-item-requested .within uint
attestation = 1
$data-item-requested /=  attestation
trusted-apps = 2
$data-item-requested /= trusted-apps
extensions = 3
$data-item-requested /= extensions
suit-commands = 4
$data-item-requested /= suit-commands

query-request = [
  type: TEEP-TYPE-query-request,
  token: uint,
  options: {
    ? cipher-suites => [ + suite ],
    ? nonce => bytes,
    ? version => [ + version ],
    ? oscp-data => bytes,
    * $$query-request-extensions
    * $$teep-option-extensions
  },
  * data-item-requested,  ; why is this not a bitmap?
]

suite = $TEEP-suite .within uint

TEEP-AES-CCM-16-64-128-HMAC256--256-X25519-EdDSA = 1
TEEP-AES-CCM-16-64-128-HMAC256--256-P-256-ES256  = 2

$TEEP-suite /= TEEP-AES-CCM-16-64-128-HMAC256--256-X25519-EdDSA
$TEEP-suite /= TEEP-AES-CCM-16-64-128-HMAC256--256-P-256-ES256

query-response = [
  type: TEEP-TYPE-query-response,
  token: uint,
  options: {
    ? selected-cipher-suite => suite,
    ? selected-version => version,
    ? eat => bytes,
    ? ta-list  => [ + bytes ],
    ? ext-list => [ + ext-info ],
    * $$query-response-extensions,
    * $$teep-option-extensions
  }
]

trusted-app-install = [
  type: TEEP-TYPE-trusted-app-install,
  token: uint,
  option: {
    ? manifest-list => [ + SUIT-envelope ],
    * $$trusted-app-install-extensions,
    * $$teep-option-extensions
  }
]

trusted-app-delete = [
  type: TEEP-TYPE-trusted-app-delete,
  token: uint,
  option: {
    ? ta-list => [ + bytes ],
    * $$trusted-app-delete-extensions,
    * $$teep-option-extensions,
  }
]

teep-success = [
  type: TEEP-TYPE-teep-success,
  token: uint,
  option: {
    ? msg => text,
    * $$teep-success-extensions,
    * $$teep-option-extensions
  }
]

teep-error = [
  type: TEEP-TYPE-teep-error,
  token: uint,
  options: {
     ? err-msg => text,
     ? cipher-suites => [ + suite ],
     ? versions => [ + version ],
     * $$teep-error--extensions,
     * $$teep-option-extensions
  }
  err-code: uint,
]

;options integer labels, plesse check and rearrange

; type = 0 ; not required due to array structure
; toke = 1 ; not required due to array structure
; request = 2 ; not required due to array structure
cipher-suites = 3
nonce = 4
versions = 5
oscp-data = 6
selected-cipher-suite = 7
selected-version = 8
eat = 9
ta-list = 10
ext-list = 11
manifest-list = 12
; err-code = 13 ; not required due to array structure
msg = 14 ; added missing msg label
err-msg = 15

